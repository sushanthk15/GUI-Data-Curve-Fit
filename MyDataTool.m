%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% DATA ANALYSIS TOOL
% * This tool reads data from most common data-file formats and analyze the data by least square approach.
% * The program create its own GUI which is structured with classical programatic approach.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
classdef MyDataTool < handle
    %% Properties of class
    % * All variables and handles for gui components are exclusively defined
    % as private properties of main class. 
    % * Properties can be accessed with *obj.propertyName*
    
    properties(Access = private)
        %variables 
        textData
        numericData
        xData
        yData
        polyDegree
        polyCoeff
        polyData
        polyString
        calculateFlag
        
        %main window components
        window
        menuFile
        menuOpenDlg
        menuSaveDlg
        menuClose
        toolBar
        toolOpen
        
        %Load Data gui panel components
        loadDataPanel
        filePathText
        filePathTextBox
        selectButton
        xDataText
        xDataPopup
        yDataText
        yDataPopup
        readButton
        
        %Polynomial Data gui panel components
        polyDataPanel
        degreeText
        degreeTextBox
        degreeInfoText
        polynomialText
        polynomialTextBox
        
        actionPanel
        actionTextBox
        
        %Data Plot gui panel components
        plotPanel
        plotAxes
        legendFlag = 0
        mrkCount = 0
        byOrderRadioBtn
        byDataRadioBtn
        rawCheckbox
        polyCheckbox
        plotButton
        
        %gui button components
        calculateButton
        clearButton  
        exitButton
    end
%% Functionality of GUI
% * All functions for gui functioning and data analysis are
% programmed under publically acessed methods    
    methods(Access = public)
        %% Main Function
        % This function create class object which create gui
        function obj = MyDataTool()
            obj.createGui;
            if nargout == 0
                clear obj
            end
        end 
        %% Close Function
        % This function delete class object window after the confirmation from user        
        function closeReq(obj,varargin)
%             obj.hsurf.String = 'Nikhil'
            selection = questdlg('Are you sure to close the program?',...
                'Confirmation',...
                'Yes','No',...
                'No');
            switch selection
                case 'Yes'
                    obj.window.delete;
                case 'No'
                    return;
            end
        end
        %% Clear Data Function
        % * Aim behind this function to reset all variables and gui fiels to default 
        % * This function actually delete old object window and opens the new window.
        function clearData(obj,varargin)
            delete(obj.window);
            MyDataTool;
            %This function does nothing            
        end
        %% Save Data Function
        % * Aim behind this function to provide user **.txt*, _-ascii_ file of all polynomial coefficients 
        % * This function ask user to *select* or *create* file to save and saves file         
        function SaveButtonCallback(obj,varargin)
           [saveFile,savePath] = uiputfile({'*.txt'},'Save File');
           saveFileName = fullfile(savePath,saveFile);
           dlmwrite(saveFileName, obj.polyCoeff, 'delimiter','\t','coffset',1,'precision',13);
           
        end
        %% Print Function
        % * Aim behind this function to provide user to save screen capture of GUI window 
        % * This function ask user to *select* or *create* file to save and saves file         
        function PrintButtonCallback(obj,varargin)
            [saveFile,savePath] = uiputfile({'*.png'},'Save File');
            printFileName = fullfile(savePath,saveFile);
            saveas(obj.plotAxes,printFileName,'png')
        end
        %% FileTextBox Callback Function
        % This includes Callback and ButtonDown functionallity of file textbox
        function FileTextBoxButtonDwn(obj,varargin)
            obj.filePathTextBox.Enable = 'On';
            obj.filePathTextBox.FontAngle = 'normal';
            obj.filePathTextBox.ForegroundColor = [0,0,0];
            obj.filePathTextBox.String = '';
        end
        function FileTextBoxCallback(obj,varargin)
            try
                localdata = importdata(obj.filePathTextBox.String);
            catch 
                 errordlg('file not exist');
                 return
            end
            
            [rows,columns]=size(localdata.data);
            
            if rows>columns                        %If rows>Columns, Data is assessed through Column headers
                if isa(localdata,'struct')         %To check if text exists
                    obj.numericData=localdata.data;
                    obj.textData=transpose(localdata.colheaders);
                elseif isa(localdata,'double')     %IF data is purely numeric
                    obj.numericData=localdata;
                    obj.xDataPopup.Enable = 'Off';  % For No Headers, the Pop Up Values goes OFF
                    obj.yDataPopup.Enable = 'Off';
                end
            else                                   %If columns>rows, data is assessed through Row headers
                if isa(localdata,'struct')
                    obj.numericData=transpose(localdata.data); %Taking Transpose helps read the struture column wise
                    obj.textData=localdata.rowheaders;
                elseif isa(localdata,'double')
                    obj.numericData=transpose(localdata);
                    obj.xDataPopup.Enable = 'Off';  % For No Headers, the Pop Up Values goes OFF
                    obj.yDataPopup.Enable = 'Off'; 
                end
            end
                obj.xDataPopup.Enable = 'On';    
                obj.yDataPopup.Enable = 'On';    
                set(obj.xDataPopup,'String',obj.textData);  %X PopUpValues and Y PopUpValuestake the Header Values
                set(obj.yDataPopup,'String',obj.textData);
        end
        %% File Open Function
        % * This function is called from Select button, Open file menu and Open toolbar   
        % * It uses _uigetfile_ for open dialogbox.
        function SelectButtonCallback(obj,varargin)            
            [FileName,FilePath]=uigetfile({'*.csv'}, 'Open Directory');%Opens file opening dialog
            ExPath = [FilePath FileName];
            if ~ischar(ExPath)
                if  isempty(obj.filePathTextBox.String) || obj.filePathTextBox.Value == 0
                    return                 
                end
            else                                    
                obj.filePathTextBox.Enable = 'On';
                obj.filePathTextBox.FontAngle = 'normal';
                obj.filePathTextBox.ForegroundColor = [0,0,0];
                set(obj.filePathTextBox,'String',ExPath); 
                
                obj.FileTextBoxCallback; %importing data and setting pop up list
            end            
            
        end
        %% Read Function
        % Read the data depending on user selection in popup menus.
        function ReadButtonCallback(obj,varargin)
            try
                index_of_x = get(obj.xDataPopup,'Value');
                index_of_y = get(obj.yDataPopup,'Value');
                obj.xData = transpose(obj.numericData(:,index_of_x));
                obj.yData = transpose(obj.numericData(:,index_of_y));
            catch
                errordlg('Fail to read data');
                return;
            end
            if obj.byDataRadioBtn.Value == 0
                obj.degreeTextBox.Enable = 'On';
                obj.degreeTextBox.String = '';
                obj.degreeTextBox.FontAngle = 'normal';
                obj.degreeTextBox.ForegroundColor = [0,0,0];
            end
            obj.calculateButton.Enable = 'On';
            obj.plotButton.Enable = 'On';
            obj.rawCheckbox.Enable = 'On';
            obj.menuOpenDlg.Enable = 'off';
            set(findall(gcf,'TooltipString','Open File'),'Enable','off');
            obj.selectButton.Enable = 'off';
        end
        %% Degree TextBox Callback Function
        % Read the data entered in field and check for errors and display corresponding information.        
        function DegreeTextBoxCallback(obj,varargin)
            obj.polyDegree = str2double(get(obj.degreeTextBox,'String'));
            if obj.polyDegree > 0 && obj.polyDegree < 5
                obj.degreeInfoText.String = '';
            elseif obj.polyDegree == 0
                obj.degreeInfoText.ForegroundColor = [0,0,1];
                obj.degreeInfoText.String = 'Entering degree as 0 will calculate mean of the data';
            else
                obj.degreeInfoText.ForegroundColor = [1,0,0];
                obj.degreeInfoText.String = 'Please enter the degree between 0 to 5';
            end
        end
        %% Calculate Button Callback Function
        % * Based upon degree of polynomial and the data entered, calculte polynomial coffiecient (_Least Square Approach_)
        % * Construct of polynomial equation string from coefficients.
        % * Inputs required are degree of polynomial and one independent and one dependent data sets.
        function CalculateButtonCallback(obj,varargin)
            obj.polyDegree = str2double(get(obj.degreeTextBox,'String'));
            if isempty(obj.polyDegree)
                errordlg('Please enter degree of the polynomial.','Error: Null Error');
                return                
            elseif ceil(obj.polyDegree) ~= obj.polyDegree
                errordlg('Polynomial degree should be an Integer','Error: Value Type Error');
                return                
            else
                if obj.polyDegree > -1 && obj.polyDegree < 5
                    [obj.polyData,obj.polyCoeff] = leastsquare(obj.xData,obj.yData,obj.polyDegree);% This function evaluates the polynomial coefficient using least square approach.
                else
                    errordlg('Please check the inputs for calculation','Error: Value Error');
                    return
                end
            end
            %Construction of polynomial equation
            try
                obj.polyString = '';
                for i = 1 : obj.polyDegree
                    if obj.polyCoeff(i)~= 0
                        obj.polyString = strcat(obj.polyString,num2str(obj.polyCoeff(i),'%+.3g'),'*x^',num2str(obj.polyDegree+1-i));
                    else
                        pass
                    end
                end

                if obj.polyCoeff(obj.polyDegree+1)~=0
                    obj.polyString = strcat(obj.polyString,num2str(obj.polyCoeff(obj.polyDegree+1),'%+.3g'));
                else
                    pass
                end
                obj.polynomialTextBox.String = strip(obj.polyString,'left','+');
            catch ME
                errordlg('Fail to concatinate polynomial string',ME.identifier)
            end
            %Enable/Disable behavior of GUI components
            obj.byOrderRadioBtn.Enable = 'On';
            obj.byDataRadioBtn.Enable = 'On';
            obj.polyCheckbox.Enable = 'On';
            obj.menuSaveDlg.Enable = 'On';
            set(findall(gcf,'TooltipString','Save Data'),'Enable','On');
            obj.calculateFlag = 1
        end
        %% Radio Buttons Callback Function
        % These functions toggle the enabling of plot style  
        function ByOrderRdoBtnCallback(obj,varargin)
            obj.byDataRadioBtn.Value = 0 ;
            obj.degreeTextBox.Enable = 'on';
            obj.xDataPopup.Enable = 'off';
            obj.yDataPopup.Enable = 'off';
            cla(obj.plotAxes)
        end        
        function ByDataRdoBtnCallback(obj,varargin)
            obj.byOrderRadioBtn.Value = 0 ;
            obj.degreeTextBox.Enable = 'off';
            obj.xDataPopup.Enable = 'on';
            obj.yDataPopup.Enable = 'on';
            cla(obj.plotAxes)
        end
        %% Plot Function
        % * The main plot fuction has two fuctionalities *By Order* and *By Data Type*
        % * Based on radiobutton selection it calls respective function.
        % * *LegAppend function is used to append legends when user plots more than one data sets
        function PlotButtonCallback(obj,varargin)
            if obj.calculateFlag ~= 1 && obj.polyCheckbox.Value == 1
                errordlg('Please calculate data before plotting')
                return
            end
            if obj.rawCheckbox.Value == 1 || obj.polyCheckbox.Value == 1
                if obj.byOrderRadioBtn.Value == 1
                    obj.ByOrderPlot();
                elseif obj.byDataRadioBtn.Value == 1
                    obj.ByDataPlot();
                end
            else
                errordlg('Please check any one of the checkboxes','Error: Input Error');
                return                
            end
            obj.calculateFlag = 0
        end
        function ByOrderPlot(obj)
            if ~isempty(obj.polyDegree)
                switch obj.polyDegree
                    case 0
                        lineColor = 'b';
                        legendName = '0-order(mean)';
                    case 1
                        lineColor = 'r';
                        legendName = '1-order';                    
                    case 2
                        lineColor = 'g';
                        legendName = '2-order';                    
                    case 3
                        lineColor = 'm';
                        legendName = '3-order';                    
                    case 4
                        lineColor = 'c';
                        legendName = '4-order';
                    otherwise
                        pass
                end
            end 
            title(obj.plotAxes,strcat(obj.yDataPopup.String(obj.yDataPopup.Value),'-vs-', obj.xDataPopup.String(obj.xDataPopup.Value)));
            xlabel(obj.plotAxes,obj.xDataPopup.String(obj.xDataPopup.Value));
            ylabel(obj.plotAxes,obj.yDataPopup.String(obj.yDataPopup.Value));
            set(gca,'NextPlot','replacechildren') ;
            if obj.rawCheckbox.Value == 1 && obj.polyCheckbox.Value == 0              
                hold off;
                plot(obj.xData,obj.yData,'black*','Parent',obj.plotAxes);
                legend('Raw Data');
                obj.legendFlag = 0;
            elseif obj.rawCheckbox.Value == 1 && obj.polyCheckbox.Value == 1
                if obj.legendFlag == 0
                    plot(obj.xData,obj.yData,'black*','Parent',obj.plotAxes);
                    legend('Raw Data');
                end
                hold all;
                plot(obj.xData,obj.polyData,'Color',lineColor,'Linewidth',1);
                obj.LegAppend(legendName);
                obj.legendFlag = 1;
                                
            elseif obj.polyCheckbox.Value == 1 && obj.rawCheckbox.Value == 0
                hold off;
                plot(obj.xData,obj.polyData,'g-','Parent',obj.plotAxes);
                legend(legendName);
                obj.legendFlag = 0;

            elseif obj.rawCheckbox.Value == 0 && obj.polyCheckbox.Value == 0
                hold off;
                obj.legendFlag = 0;
                cla;
                warndlg('Please select the data type to plot','Warning');
            end            
        end
        function ByDataPlot(obj)
            
            title(obj.plotAxes,strcat(obj.degreeTextBox.String,'-order curve fit comparision'));
            xlabel(obj.plotAxes,'X Data');
            ylabel(obj.plotAxes,'Y Data');
            set(gca,'NextPlot','replacechildren') ;
            if obj.rawCheckbox.Value == 1 && obj.polyCheckbox.Value == 0              
                hold off;
                plot(obj.xData,obj.yData,'black*','Parent',obj.plotAxes);
                legend('Raw Data'); 
                obj.legendFlag = 0;
                hold off;
            elseif obj.rawCheckbox.Value == 1 && obj.polyCheckbox.Value == 1
                mrkSym = {'+','o','*','.','x','s','d','^','v','>','<','p','h'};
                legendName = strcat(obj.yDataPopup.String(obj.yDataPopup.Value),'-vs-', obj.xDataPopup.String(obj.xDataPopup.Value));
                if obj.mrkCount < length(mrkSym)
                    obj.mrkCount = obj.mrkCount+1;
                else
                    obj.mrkCount = 1;
                end
                hold all;
                plot(obj.xData,obj.yData,mrkSym{obj.mrkCount},obj.xData,obj.polyData,'color',rand(1,3),'Linewidth',1,'Parent',obj.plotAxes);
                legend();                
                obj.LegAppend(legendName)               
            elseif obj.polyCheckbox.Value == 1 && obj.rawCheckbox.Value == 0
                hold off;
                plot(obj.xData,obj.polyData,'g-','Parent',obj.plotAxes);                
                legend('p(x)');
                obj.legendFlag = 0;
                hold off;
            elseif obj.rawCheckbox.Value == 0 && obj.polyCheckbox.Value == 0
                hold off;
                obj.legendFlag = 0;
                cla;
                warndlg('Please select the data type to plot','Warning');
            end
        end
        function LegAppend(obj,newString) 
            oldStr = get(obj.plotAxes.Legend,'String');%reads current legend
            oldStr(end) = []; %delete last legend
            if obj.byOrderRadioBtn.Value == 1
                if ~ismember(oldStr,newString)
                    oldStr{end+1}= newString; %append last legend with user defined name
                end
            elseif obj.byDataRadioBtn.Value == 1
                oldStr(end)= newString;
                oldStr{end+1} = 'p(x)';
            end
            legend(oldStr,'location','best');%choose best legend location
            hold off;
            
        end
    end
    
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%-----------------------------------STRUCTURE OF USER INTERFACE-----------------------------------%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    methods(Access = private)
        %% GUI Building Block
        % This is private method which defines whole structure of GUI
        % window
        
        function createGui(obj)
            obj.window = figure(...
                        'Units','normalized',...
                        'Position',[0 0 1 1],...
                        'NumberTitle', 'off',...
                        'Name','Data Analysis Tool',...
                        'MenuBar','none',...
                        'ToolBar','figure',...
                        'CloseRequestFcn',@obj.closeReq);

            axes_home = axes('unit', 'normalized', 'position', [0 0 1 1]);% create an axes that spans the whole gui            
            bckgrnd = imread('tubaf.jpg'); imagesc(bckgrnd);% import the background image and show it on the axes
            set(axes_home,'handlevisibility','off','visible','off')% prevent plotting over the background and turn the axis off            
            uistack(axes_home, 'bottom');% making sure the background is behind all the other uicontrols
            

            obj.menuFile = uimenu('Parent',obj.window);
            obj.menuFile.Label = 'File';
            obj.menuOpenDlg = uimenu('Parent',obj.menuFile);
            obj.menuOpenDlg.Label = 'Open';
            obj.menuOpenDlg.Callback = @obj.SelectButtonCallback;
            obj.menuSaveDlg = uimenu('Parent',obj.menuFile);
            obj.menuSaveDlg.Label = 'Save';
            obj.menuSaveDlg.Callback = @obj.SaveButtonCallback;
            obj.menuSaveDlg.Enable = 'off';
            obj.menuClose = uimenu('Parent',obj.menuFile);
            obj.menuClose.Label = 'Close';
            obj.menuClose.Callback = @obj.closeReq;
            
            set(findall(gcf,'TooltipString','New Figure'),'Visible','Off');
            set(findall(gcf,'TooltipString','Link Plot'),'Visible','Off');
            set(findall(gcf,'TooltipString','Insert Colorbar'),'Visible','Off')
            set(findall(gcf,'TooltipString','Edit Plot'),'Visible','Off')
            set(findall(gcf,'TooltipString','Open File'),'ClickedCallback',@obj.SelectButtonCallback)
            set(findall(gcf,'TooltipString','Save Figure'),'TooltipString','Save Data')
            set(findall(gcf,'TooltipString','Save Data'),'ClickedCallback',@obj.SaveButtonCallback)
            set(findall(gcf,'TooltipString','Print Figure'),'ClickedCallback',@obj.PrintButtonCallback)
            set(findall(gcf,'TooltipString','Save Data'),'Enable','off');
            set(findall(gcf,'TooltipString','Insert Legend'),'Visible','off');
            set(findall(gcf,'TooltipString','Open Property Inspector'),'Enable','off');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            obj.loadDataPanel = uipanel(...
                                    'Parent',obj.window,...
                                    'FontUnits',get(0,'defaultuipanelFontUnits'),...
                                    'FontSize',10,...
                                    'FontWeight','bold',...
                                    'Units','normalized',...
                                    'BorderType','none',...
                                    'BorderWidth',2,...
                                    'Title',{  'Load Data' },...
                                    'BackgroundColor',[0.411764705882353 0.764705882352941 1],...
                                    'ForegroundColor',[1 1 1],...
                                    'Tag','Load_Data_Panel',...
                                    'Position',[0.025520833333333,0.558792372881356,0.234635416666667,0.205508474576272]);

            obj.filePathText = uicontrol(...
                                    'Parent',obj.loadDataPanel,...
                                    'Units','normalized',...
                                    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
                                    'HorizontalAlignment','left',...
                                    'String','Data File Dirctory',...
                                    'Style','text',...
                                    'Position',[0.016648168701443,0.829971181556197,0.154273029966704,0.100864553314121],...
                                    'BackgroundColor',[0.411764705882353 0.764705882352941 1],...
                                    'Tag','File_Path_Text',...
                                    'FontSize',8);  
                                
            obj.filePathTextBox = uicontrol(...
                                        'Parent',obj.loadDataPanel,...
                                        'Units','normalized',...
                                        'FontUnits',get(0,'defaultuicontrolFontUnits'),...
                                        'HorizontalAlignment','left',...
                                        'String','-Please select the path of data file- ',...
                                        'Style','edit',...
                                        'Enable','off',...
                                        'Position',[0.016648168701443,0.668587896253603,0.69589345172031,0.152737752161384],...
                                        'BackgroundColor',[1 1 1],...
                                        'ForegroundColor',[0.650980392156863 0.650980392156863 0.650980392156863],...
                                        'Interruptible','off',...
                                        'Tag','FilePath_TextBox',...
                                        'FontAngle','italic',...
                                        'ButtonDownFcn',@obj.FileTextBoxButtonDwn,...
                                        'Callback',@obj.FileTextBoxCallback);   

            obj.selectButton = uicontrol(...
                                    'Parent',obj.loadDataPanel,...
                                    'Units','normalized',...
                                    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
                                    'String','Select',...
                                    'Style',get(0,'defaultuicontrolStyle'),...
                                    'Position',[0.750277469478357,0.668587896253603,0.18645948945616,0.152737752161384],...
                                    'BackgroundColor',get(0,'defaultuicontrolBackgroundColor'),...
                                    'Tag','Select_Button',...
                                    'Callback',@obj.SelectButtonCallback);                                    
                            
            obj.xDataText = uicontrol(...
                                'Parent',obj.loadDataPanel,...
                                'Units','normalized',...
                                'FontUnits',get(0,'defaultuicontrolFontUnits'),'FontSize',8,...
                                'HorizontalAlignment','left',...
                                'String','X Data',...
                                'Style','text',...
                                'Position',[0.016648168701443,0.37463976945245,0.123196448390677,0.123919308357349],...
                                'BackgroundColor',[0.411764705882353 0.764705882352941 1],...
                                'Tag','XData_Text');
                            
            obj.xDataPopup = uicontrol(...
                                'Parent',obj.loadDataPanel,...
                                'Units','normalized',...
                                'FontUnits',get(0,'defaultuicontrolFontUnits'),...
                                'String',{  '-Select-' },...
                                'Style','popupmenu',...
                                'Enable','off',...                                
                                'Value',1,...
                                'ValueMode',get(0,'defaultuicontrolValueMode'),...                                
                                'Position',[0.168701442841288,0.368876080691643,0.216426193118757,0.135446685878962],...
                                'BackgroundColor',[1 1 1],...
                                'Tag','XData_Popup');%,...
                                %'Callback',@obj.XPopup_Callback);%(hObject,eventdata)basic_export('XData_Popup_Callback',hObject,eventdata,guidata(hObject)));                            

            obj.yDataText = uicontrol(...
                                'Parent',obj.loadDataPanel,...
                                'Units','normalized',...
                                'FontUnits',get(0,'defaultuicontrolFontUnits'),'FontSize',8,...
                                'HorizontalAlignment','left',...
                                'String','Y_Data',...
                                'Style','text',...                                
                                'Position',[0.016648168701443,0.129682997118155,0.109877913429523,0.100864553314121],...
                                'BackgroundColor',[0.411764705882353 0.764705882352941 1],...
                                'Tag','YData_Text');

            obj.yDataPopup = uicontrol(...
                                'Parent',obj.loadDataPanel,...
                                'Units','normalized',...
                                'FontUnits',get(0,'defaultuicontrolFontUnits'),...
                                'String',{  '-Select-' },...
                                'Style','popupmenu',...
                                'Enable','off',...
                                'Value',1,...
                                'ValueMode',get(0,'defaultuicontrolValueMode'),...
                                'Position',[0.165371809100999,0.132564841498559,0.216426193118757,0.112391930835735],...
                                'BackgroundColor',[1 1 1],...
                                'Tag','YData_Popup');

            obj.readButton = uicontrol(...
                                    'Parent',obj.loadDataPanel,...
                                    'Units','normalized',...
                                    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
                                    'String','Read',...
                                    'Style',get(0,'defaultuicontrolStyle'),...
                                    'Position',[0.550499445061037,0.270893371757928,0.186459489456159,0.152737752161383],...
                                    'BackgroundColor',get(0,'defaultuicontrolBackgroundColor'),...
                                    'Tag','Read_Button',...
                                    'Callback',@obj.ReadButtonCallback);                             
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

            obj.polyDataPanel = uipanel(...
                                    'Parent',obj.window,...
                                    'FontUnits',get(0,'defaultuipanelFontUnits'),...
                                    'FontSize',10,...
                                    'FontWeight','bold',...
                                    'Units','normalized',...
                                    'BorderType','none',...
                                    'BorderWidth',2,...
                                    'Title',{  'Polynomial Data' },...
                                    'BackgroundColor',[0.411764705882353 0.764705882352941 1],...
                                    'ForegroundColor',[1 1 1],...
                                    'Tag','Load_Data_Panel',...
                                    'Position',[0.025241918701443,0.305084745762712,0.234635416666666,0.205508474576272]);                                

            obj.degreeText = uicontrol(...
                                    'Parent',obj.polyDataPanel,...
                                    'Units','normalized',...
                                    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
                                    'HorizontalAlignment','left',...
                                    'String','Degree of Polynomial',...
                                    'Style','text',...
                                    'BackgroundColor',[0.411764705882353 0.764705882352941 1],...
                                    'Position',[0.02330743618202,0.779538904899133,0.306326304106548,0.112391930835735],...      
                                    'Tag','Degree_Text');
                                
            obj.degreeTextBox = uicontrol(...
                                    'Parent',obj.polyDataPanel,...
                                    'Units','normalized',...
                                    'FontUnits','normalized',...
                                    'HorizontalAlignment','left',...
                                    'String','Please enter degree of polynomial',...
                                    'Style','edit',...
                                    'Position',[0.02330743618202,0.615273775216134,0.517836883669766,0.149855907780979],...
                                    'BackgroundColor',[1 1 1],...                             
                                    'ForegroundColor',[0.650980392156863 0.650980392156863 0.650980392156863],...
                                    'Enable','off',...
                                    'Tag','Degree_Text_Box',...
                                    'FontSize',0.503144654088051,...
                                    'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'),...
                                    'FontAngle','italic',...
                                    'Callback',@obj.DegreeTextBoxCallback);                                

            obj.degreeInfoText = uicontrol(...
                                    'Parent',obj.polyDataPanel,...
                                    'Units','normalized',...
                                    'FontUnits','normalized',...
                                    'HorizontalAlignment','left',...
                                    'String',blanks(0),...
                                    'Style','text',...
                                    'Position',[0.02441731409545,0.45389048991354,0.942365185556558,0.146974063400577],...
                                    'BackgroundColor',[0.411764705882353 0.764705882352941 1],...
                                    'ForegroundColor',[1 0 0],...
                                    'Enable',get(0,'defaultuicontrolEnable'),...
                                    'Tag','Degree_Info_Text',...
                                    'FontSize',0.65359477124183,...
                                    'FontAngle','italic',...
                                    'FontWeight','bold');

            obj.polynomialText = uicontrol(...
                                    'Parent',obj.polyDataPanel,...
                                    'Units','normalized',...
                                    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
                                    'HorizontalAlignment','left',...
                                    'String','Polynomial Formula',...
                                    'Style','text',...
                                    'BackgroundColor',[0.411764705882353 0.764705882352941 1],...
                                    'Position',[0.02885682574918,0.269452449567726,0.300776914539404,0.100864553314121],...
                                    'Tag','Polynomial_Text');                                
                                
            obj.polynomialTextBox = uicontrol(...
                                        'Parent',obj.polyDataPanel,...
                                        'Units','normalized',...
                                        'FontUnits','normalized',...
                                        'String',blanks(0),...
                                        'Style','edit',...
                                        'Position',[0.0260821309656,0.10086455331412,0.940700368686408,0.152737752161383],...
                                        'BackgroundColor',[1 1 1],...
                                        'Enable','inactive',...
                                        'Tag','PolynomialTextBox',...
                                        'FontSize',0.503144654088049,...
                                        'FontSizeMode',get(0,'defaultuicontrolFontSizeMode'));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

            obj.calculateButton = uicontrol(...
                                    'Parent',obj.window,...
                                    'Units','normalized',...
                                    'FontUnits',get(0,'defaultuicontrolFontUnits'),...
                                    'String','Calculate',...
                                    'Enable','off',...
                                    'Style',get(0,'defaultuicontrolStyle'),...
                                    'Position',[0.071614583333333,0.225635593220339,0.04375,0.028072033898305],...
                                    'KeyPressFcn',blanks(0),...                                   
                                    'Tag','Calculate_Button',...
                                    'Callback',@obj.CalculateButtonCallback);

            obj.clearButton = uicontrol(...
                                'Parent',obj.window,...
                                'Units','normalized',...
                                'FontUnits',get(0,'defaultuicontrolFontUnits'),...
                                'String','Clear',...
                                'Style','PushButton',...
                                'Tag','Clear_Button',...
                                'Position',[0.157031250000001,0.22457627118644,0.04375,0.028072033898305],...
                                'Callback',@obj.clearData);                                
                                


            obj.exitButton = uicontrol(...
                                'Parent',obj.window,...
                                'Units','normalized',...
                                'FontUnits',get(0,'defaultuicontrolFontUnits'),...
                                'String','Exit',...
                                'Style',get(0,'defaultuicontrolStyle'),...
                                'Position',[0.11171875,0.120497881355932,0.04375,0.028072033898305],...                             
                                'Tag','Exit_Button',...
                                'Callback',@obj.closeReq);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                            
            obj.plotPanel = uipanel(...
                                'Parent',obj.window,...
                                'FontUnits',get(0,'defaultuipanelFontUnits'),...
                                'Units','normalized',...
                                'BorderType','none',...
                                'BorderWidth',2,...
                                'Title','Data Plot',...                                
                                'BorderWidth',2,...
                                'BackgroundColor',[0.411764705882353 0.764705882352941 1],...
                                'ForegroundColor',[1 1 1],...
                                'Tag','PlotPanel',...                               
                                'Position',[0.289713541666667,0.066737288135593,0.682812500000003,0.766684322033899],...
                                'FontSize',11,...
                                'FontWeight','bold');
                            
            obj.plotButton = uicontrol(...
                                'Parent',obj.plotPanel,...
                                'Units','normalized',...
                                'FontUnits',get(0,'defaultuicontrolFontUnits'),...
                                'String','Plot',...
                                'Style','PushButton',...
                                'Enable','off',...
                                'Position',[0.888062547673528,0.496386458729555,0.066742944317302,0.040652339292505],...
                                'Tag','Plot_Button',...
                                'Callback',@obj.PlotButtonCallback);
 
            obj.byOrderRadioBtn = uicontrol(...
                                'Parent',obj.plotPanel,...
                                'Units','normalized',...
                                'FontUnits',get(0,'defaultuicontrolFontUnits'),...
                                'String','By Order',...
                                'Style','radiobutton',...
                                'Enable','off',...
                                'BackgroundColor',[0.411764705882353 0.764705882352941 1],...
                                'Position',[0.876048817696419,0.70009604412324,0.095728451563692,0.034946747812857],...
                                'Value',1,...
                                'Tag','ByOrder_RadioBtn',...
                                'Callback',@obj.ByOrderRdoBtnCallback);

            obj.byDataRadioBtn = uicontrol(...
                                'Parent',obj.plotPanel,...
                                'Units','normalized',...
                                'FontUnits',get(0,'defaultuicontrolFontUnits'),...
                                'String','By Data Type',...
                                'Style','radiobutton',...
                                'Enable','off',...
                                'BackgroundColor',[0.411764705882353 0.764705882352941 1],...
                                'Position',[0.876048817696419,0.67009604412324,0.095728451563692,0.034946747812857],...
                                'Tag','ByData_RadioBtn',...
                                'Callback',@obj.ByDataRdoBtnCallback);

            obj.rawCheckbox = uicontrol(...
                                'Parent',obj.plotPanel,...
                                'Units','normalized',...
                                'FontUnits',get(0,'defaultuicontrolFontUnits'),...
                                'String','Raw Data',...
                                'Style','checkbox',...
                                'Enable','off',...
                                'BackgroundColor',[0.411764705882353 0.764705882352941 1],...
                                'Position',[0.876811594202902,0.604792696842905,0.095728451563692,0.034946747812857],...
                                'Tag','Raw_Checkbox',...
                                'KeyPressFcn',blanks(0));

            obj.polyCheckbox = uicontrol(...
                                'Parent',obj.plotPanel,...
                                'Units','normalized',...
                                'FontUnits',get(0,'defaultuicontrolFontUnits'),...
                                'String','Polynomial Data',...
                                'Style','checkbox',...
                                'Enable','off',...
                                'BackgroundColor',[0.411764705882353 0.764705882352941 1],...
                                'Position',[0.87623951182304,0.573768543172309,0.095728451563692,0.034946747812857],...
                                'Tag','Polynomial_Checkbox');                            


            obj.plotAxes = axes(...
                    'Parent',obj.plotPanel,...
                    'FontUnits',get(0,'defaultaxesFontUnits'),...
                    'Units','normalized',...                    
                    'PlotBoxAspectRatio',[1 0.772727272727273 0.772727272727273],...
                    'PlotBoxAspectRatioMode',get(0,'defaultaxesPlotBoxAspectRatioMode'),...                   
                    'Position',[0.057780320366132,0.113409415121256,0.806636155606407,0.828102710413695],...
                    'Tag','Plot_Axes');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            obj.window.Visible = 'On';

        end
    end

    
end

